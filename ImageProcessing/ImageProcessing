from PIL import Image, ImageFilter, ImageTk
from rembg import remove
import tkinter as tk
import os

base_dir = os.path.realpath(os.path.join(os.getcwd(), os.path.dirname(__file__)))
path_to_Out = os.path.join(base_dir, "Out")
path_to_In = os.path.join(base_dir, "In")

categories = {
    1: "TwoSeater",
    2: "Compact",
    3: "CompactSUV",
    4: "FullsizeVan",
    5: "Midsize",
    6: "MiniVan",
    7: "PickupTruck",
    8: "StationWagon",
    9: "SUV"
}
category_paths = {k: os.path.join(path_to_Out, v) for k, v in categories.items()}
for folder in category_paths.values():
    os.makedirs(folder, exist_ok=True)

def get_image_list(directory):
    valid_extensions = (".jpg", ".jpeg", ".png")
    return [f for f in os.listdir(directory) if f.lower().endswith(valid_extensions)]

image_files = get_image_list(path_to_In)
current_image_count = 0
current_image_path = os.path.join(path_to_In, image_files[current_image_count])

def next_image():
    global current_image_count, current_image_path, tkinter_compatabile_image, image_label

    current_image_count += 1
    if current_image_count < len(image_files):
        current_image_path = os.path.join(path_to_In, image_files[current_image_count])
        new_img = Image.open(current_image_path)
        tkinter_compatabile_image = ImageTk.PhotoImage(new_img)
        image_label.configure(image=tkinter_compatabile_image)
        image_label.image = tkinter_compatabile_image
    else:
        image_label.configure(text="No more images.", image="")
        image_label.image = None

def process_image(img_path, save_folder):
    original = Image.open(img_path).convert("RGB").resize((200, 200))
    modified = remove(original).convert("L").filter(ImageFilter.FIND_EDGES).resize((200, 200))

    # Save result using original name
    filename = os.path.basename(img_path)
    name, _ = os.path.splitext(filename)
    save_path = os.path.join(save_folder, name + ".png")
    modified.save(save_path)

    next_image()

def sort_image(x):
    if x == 0:
        next_image()
        return

    if x in category_paths:
        folder = category_paths[x]
        process_image(current_image_path, folder)

window = tk.Tk()
window.title("Image Processing")

label = tk.Label(window, text="Buttons do as stated.", font=('Arial', 18))
label.pack()

img = Image.open(current_image_path)
tkinter_compatabile_image = ImageTk.PhotoImage(img)
image_label = tk.Label(window, image=tkinter_compatabile_image)
image_label.pack()

btn_matrix_frame = tk.Frame(window)
btn_matrix_frame.pack(fill="both", expand=True)

labels = [
    "Two Seater", "Compact", "Compact SUV",
    "Fullsize Van", "Mid Size", "Minivan",
    "Pickup Truck", "Station Wagon", "SUV"
]

for i in range(9):
    btn = tk.Button(btn_matrix_frame, text=labels[i], command=lambda i=i: sort_image(i + 1))
    btn.grid(row=i // 3, column=i % 3, sticky="we", padx=10)

btn_skip = tk.Button(btn_matrix_frame, text="Skip", command=lambda: sort_image(0))
btn_skip.grid(row=3, column=0, columnspan=3, sticky="news", pady=5)

window.mainloop()